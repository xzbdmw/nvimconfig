{
  "Nested Placeholder Snippet": {
    "body": [
      "T1=${1:<T2=$2>} and T2=${2:<T1=$1>}"
    ],
    "description": "A snippet with nested placeholders",
    "prefix": "nested"
  },
  "auto": {
    "body": [
      "vim.api.nvim_create_autocmd(\"${1:}\", {",
      "    callback = function ()",
      "        ${0:}",
      "    end",
      "})"
    ],
    "prefix": "auto"
  },
  "block": {
    "body": [
      "vim.cmd('redraw!')",
      "local n = 1",
      "for i = 1, 1000000000 do",
      "\tn = n + 1",
      "end"
    ],
    "desc": "block the editor",
    "prefix": "block"
  },
  "cmdgs": {
    "body": "<cmd>norm! gs<CR>",
    "prefix": "cmdgs"
  },
  "cursor": {
    "body": "local row, col = unpack(vim.api.nvim_win_get_cursor(0))",
    "prefix": "cursor"
  },
  "dbg": {
    "body": "print(debug.traceback())",
    "prefix": "dbg"
  },
  "dyk": {
    "body": [
      "vim.keymap.set(\"n\", \"<d-y>\", function()",
      "\t$0",
      "end)"
    ],
    "prefix": "kdy"
  },
  "fun": {
    "body": [
      "function ()\n\t$0\nend"
    ],
    "prefix": "fun"
  },
  "init": {
    "body": [
      "local M = {}",
      "",
      "$0",
      "",
      "return M"
    ],
    "prefix": "init"
  },
  "loc": {
    "body": "local ${0:}",
    "prefix": "loc"
  },
  "perf": {
    "body": [
      "local time = vim.uv.hrtime()",
      "Time(time, \"${0}\")"
    ],
    "prefix": "perf"
  },
  "setup": {
    "body": [
      "require(\"${1}\").setup({",
      "    ${0}",
      "})"
    ],
    "prefix": "setup"
  },
  "vim": {
    "body": [
      "vim.schedule(${1:fn})"
    ],
    "prefix": "sch"
  },
  "zzz": {
    "body": [
      "local n = 1",
      "for i = 1, 1000000000 do",
      "    n = n + 1",
      "end"
    ],
    "desc": "block the editor",
    "prefix": "123"
  }
}
